name: CI
on:
  push:
    branches:
      # -  "*" # For testing workflow
      - develop
      - master

  pull_request:
    branches:
      - develop
      - master

jobs:
  build:
    name: Build the project
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: nthung.vlvn@gmail.com
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - name: Checkout the project
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node dependencies
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: node
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: List the state of node modules
        if: steps.cache-npm.outputs.cache-hit == false
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check

      - name: Run test
        run: npm test -- --coverage
        env:
          CI: true

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          if-no-files-found: error
          path: ./coverage/lcov-report
          retention-days: 1

      - name: Build the project
        if: github.event_name == 'push'
        run: npm run build

      - name: Upload build artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: ./build
          if-no-files-found: error
          retention-days: 1

      # - name: Install surge globally
      #   if: github.event_name == 'push'
      #   run: npm install -g surge

      - name: Zip the Assets
        if: github.event_name == 'push' && contains(github.event.ref, 'master')
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage/lcov-report

      - name: Create a Release
        # We can use github.ref as the alternative
        if: github.event_name == 'push' && contains(github.event.ref, 'master')
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: Deploy to staging
        if: github.event_name == 'push' && contains(github.event.ref, 'develop')
        run: npm run deploy

      - name: Deploy to Production Server
        if: github.event_name == 'push' && contains(github.event.ref, 'master')
        run: npm run deploy

      - name: Upload coverage to Codecov
        if: github.event_name == 'push' && contains(github.event.ref, 'master')
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

      - name: Open issue when the job failed
        if: failure() && github.event_name == 'pull_request'
        uses: actions-ecosystem/action-create-issue@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          title: "Automated issue for commit: ${{ github.sha }}"
          body: |
            This issue was automatically created by the Github Action workflow **${{ github.workflow }}**

            The commit hash was: _${{ github.sha }}_

          assignees: ${{ github.event.pull_request.user.login }}
